{
    "$meta": {
        "label": "English",
        "humanizer_language": "en"
    },
    "restarter": {
        "start_timeout": "failed to start in time",
        "crash_detected": "crash detected",
        "hang_detected": "hang detected",
        "partial_hang_warn": "Due to a partial hang, this server will restart in 1 minute. Please disconnect now.",
        "partial_hang_warn_discord": "Due to a partial hang, **%{servername}** will restart in 1 minute.",
        "schedule_reason": "scheduled restart at %{time}",
        "schedule_warn": "This server is scheduled to restart in %{smart_count} minute. Please disconnect now. |||| This server is scheduled to restart in %{smart_count} minutes.",
        "schedule_warn_discord": "**%{servername}** is scheduled to restart in %{smart_count} minute. |||| **%{servername}** is scheduled to restart in %{smart_count} minutes."
    },
    "ban_messages": {
        "kick_temporary": "(%{author}) You have been banned from this server for \"%{reason}\". Your ban will expire in: %{expiration}.",
        "kick_permanent": "(%{author}) You have been permanently banned from this server for \"%{reason}\".",
        "reject_temporary": "You have been banned from this server.\nYour ban will expire in: %{expiration}.\nBan ID: %{id}.\nBan Reason: %{reason}.\nBanned by: %{author}.",
        "reject_permanent": "You have been permanently banned from this server.\nBan ID: %{id}.\nBan Reason: %{reason}.\nBanned by: %{author}."
    },
    "server_actions": {
        "restarting": "Server restarting (%{reason}).",
        "restarting_discord": "**%{servername}** is restarting (%{reason}).",
        "stopping": "Server shutting down (%{reason}).",
        "stopping_discord": "**%{servername}** is shutting down (%{reason}).",
        "spawning_discord": "**%{servername}** is starting."
    },
    "discord": {
        "status_online": "**%{servername}** is currently **Online**!",
        "status_offline": "**%{servername}** is currently **Offline**!"
    },
    "nui_warning": {
        "title": "WARNING",
        "warned_by": "Warned by:",
        "instruction": "Hold [SPACE] for 10 seconds to dismiss this message."
    },
    "nui_menu": {
        "misc": {
            "help_message": "txAdmin has gotten an in-game menu, use the F1 key to try it out!"
        },
        "common": {
            "cancel": "Cancel",
            "submit": "Submit"
        },
        "page_main": {
            "fix_vehicle": {
                "list_primary": "Fix Vehicle",
                "list_secondary": "Set current vehicle health to 100%",
                "dialog_success": "Vehicle fixed!",
                "dialog_error": "You are not currently in a vehicle!"
            },
            "teleport": {
                "list_primary": "Teleport",
                "item_waypoint": "To: Waypoint",
                "item_coords": "To: Coordinates",
                "item_previous": "To: Previous Location",
                "dialog_title": "Teleport",
                "dialog_desc": "Provide coordinates in an x, y, z format to go through the wormhole",
                "dialog_success": "Sent you into the wormhole!",
                "dialog_error": "Invalid coordinates. Must be in the format of: 111, 222, 33"
            },
            "teleport_back": {
                "list_primary": "Go Back",
                "list_secondary": "Teleport to your last location",
                "error": "You don't have a last location to teleport to!",
                "success": "Returning through the wormhole!"
            },
            "player_mode": {
                "list_primary": "Player Mode",
                "list_secondary": "Current: %{mode}",
                "item_none": "Normal",
                "item_noclip": "No-clip",
                "item_godmode": "God Mode",
                "dialog_success_none": "Returned to default player mode",
                "dialog_success_noclip": "No-clip enabled",
                "dialog_success_godmode": "God mode enabled"
            },
            "spawn_wep": {
                "list_primary": "Spawn Weapon",
                "list_secondary": "Add a weapon to yourself",
                "dialog_title": "Spawn Weapon",
                "dialog_desc": "Spawn a weapon using its model name."
            },
            "spawn_veh": {
                "list_primary": "Spawn Vehicle",
                "list_secondary": "Spawn a vehicle by model name",
                "dialog_title": "Spawn Vehicle",
                "dialog_desc": "Enter in the model name of the vehicle you want to spawn",
                "dialog_success": "Vehicle spawned!",
                "dialog_error": "The vehicle model name '%{modelName}' does not exist!",
                "dialog_info": "Trying to spawn %{modelName}"
            },
            "heal_all": {
                "list_primary": "Heal All Players",
                "list_secondary": "Will heal & revive all players",
                "dialog_success": "Healed and revived all players"
            },
            "heal_myself": {
                "list_primary": "Heal Self",
                "list_secondary": "Restores your health",
                "dialog_success_0": "All healed up!",
                "dialog_success_1": "You should be feeling good now!",
                "dialog_success_2": "Restored to full!",
                "dialog_success_3": "Ouchies fixed!"
            },
            "send_announce": {
                "list_primary": "Send Announcement",
                "list_secondary": "Announce a message",
                "dialog_title": "Send Announcement",
                "dialog_desc": "Send an announcement to all online players",
                "dialog_success": "Sending the announcement"
            }
        },
        "page_players": {
            "misc": {
                "online_players": "Online Players",
                "players": "Players",
                "search": "Search",
                "zero_players": "No players found"
            },
            "sort": {
                "label": "Sort by",
                "distance": "Distance",
                "id": "ID",
                "joined_first": "Joined First",
                "joined_last": "Joined Last",
                "closest": "Closest",
                "farthest": "Farthest"
            }

        }
    }
}
